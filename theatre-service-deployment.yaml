apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: theatre-service
  name: theatre-service
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: theatre-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/movieticketbooking-test-network: "true"
        io.kompose.service: theatre-service
    spec:
      containers:
        - env:
            - name: SPRING_DATA_MONGODB_PASSWORD
              value: Newuser12345
            - name: SPRING_DATA_MONGODB_URI
              value: mongodb+srv://new_user:Newuser12345@cluster0.eivqluj.mongodb.net/theatre?retryWrites=true&w=majority
            - name: SPRING_DATA_MONGODB_USERNAME
              value: new_user
            - name: SPRING_KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:9092
            - name: SPRING_KAFKA_BOOTSTRAP-SERVERS
              value: kafka:9092
            - name: SPRING_KAFKA_LISTENERS
              value: PLAINTEXT://0.0.0.0:9092
            - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
              value: org.apache.kafka.common.serialization.StringSerializer
            - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
              value: org.springframework.kafka.support.serializer.JsonSerializer
            - name: SPRING_KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
          image: aditikatiyar/theatreapp:v3
          name: theatre-service
          ports:
            - containerPort: 8082
          resources: {}
      restartPolicy: Always
status: {}
